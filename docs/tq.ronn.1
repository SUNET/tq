.\" generated with Ronn-NG/v0.8.0
.\" http://github.com/apjanke/ronn-ng/tree/0.8.0
.TH "TQ" "1" "April 2020" "" ""
.SH "NAME"
\fBtq\fR \- TinyQ
.SH "SYNOPSIS"
\fBtq\fR [\-\-loglevel=\fIlevel\fR] \fIfiles\fR*
.SH "DESCRIPTIOPN"
.IP "\[ci]" 4
tq (pronounced "tiny queue") is a small self\-contained message\-bus relying heavily on nanomsg\.org sockets to send and receive JSON messages\.
.IP "\[ci]" 4
tq is configured using small programs in a lisp\-like dialect\.
.IP "\[ci]" 4
tq is written in GO but is typically distributed as a self\-contained binary
.IP "" 0
.SH "OPTIONS"
.TP
\fB\-\-loglevel\fR=\fIlevel\fR
Set the loglevel\. Default is "info"\. Options are warn,info,error and debug\. Logging is always done on stdout
.SH "SYNTAX"
A tq script file is a lisp\-syntax program which is executed by the built\-in lisp interpreter\. The primitives of tq are represented by lisp lambdas which can be called and composed to control the behaviour of tq\.
.SH "ENVIRONMENT"
Several functions of tq may be configured to use TLS \- eg for HTTPS or for using TLS\-based transport for nanommg\.org sockets\. TLS is configured using a few simple environment variables:
.IP "\[ci]" 4
\fBTQ_TLS_CERT\fR A file containing the PEM\-encoded certificate (+ chain)\.
.IP "\[ci]" 4
\fBTQ_TLS_KEY\fR A file containing the PEM\-encoded private key\.
.IP "\[ci]" 4
\fBTQ_TLS_CLIENT_CA\fR A file containing the PEM\-encoded certificates used to validate client certificates\.
.IP "" 0
.P
If \fBTQ_TLS_CLIENT_CA\fR is set tq will require client certificate authentication for all connections\.
.SH "AUTHOR"
tq is maintained by Leif Johansson \fI\%mailto:leifj@sunet\.se\fR
.SH "SOURCE"
.IP "\[ci]" 4
\fI\%https://github\.com/SUNET/tq\fR
.IP "" 0
.SH "COPYRIGHT"
tq is made available under a 2\-clause BSD license\. Copyright (2020) by the Swedish University Network\.
.SH "SEE ALSO"
go(1)
